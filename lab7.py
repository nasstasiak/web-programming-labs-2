from flask import Blueprint, render_template, request, jsonify
from datetime import datetime
from psycopg2.extras import RealDictCursor

lab7 = Blueprint('lab7', __name__)


@lab7.route('/lab7/')
def main():
    return render_template('lab7/index.html')

films = [
    {
        "title": "The Count of Monte Cristo",
        "title_ru": "Граф Монте-Кристо",
        "year": 2024,
        "description": "Марсельский моряк Эдмон Дантес (Пьер Нинэ) женится на Мерседес Эррере \
            (Анаис Демустье). Однако жених становится жертвой заговора, ровно в день свадьбы его \
            арестовывают и отправляют за решётку. После 14 лет в замке Иф Эдмону удаётся бежать. \
            Благодаря другу аббату Фариа (Пьерфранческо Фавино) вчерашний заключённый находит \
            сокровище, становится богат и превращается в графа Монте-Кристо. Он намерен\
            во что бы то ни стало отомстить врагам, из-за которых всю молодость ему пришлось \
            провести в тюрьме. Премьера картины прошла на Каннском фестивале 2024 года. Режиссёрами \
            выступили французы Александр де Ла Пательер и Матьё Делапорт, авторы драмеди «Лучшее впереди»."
    },
    {
        "title": "Shutter Island",
        "title_ru": "Остров проклятых",
        "year": 2009,
        "description": "Два американских судебных пристава отправляются на один из островов в штате Массачусетс, \
        чтобы расследовать исчезновение пациентки клиники для умалишенных преступников. При проведении \
        расследования им придется столкнуться с паутиной лжи, обрушившимся ураганом и смертельным бунтом обитателей клиники."
    },
    {
        "title": "Sen to Chihiro no kamikakushi",
        "title_ru": "Унесённые призраками",
        "year": 2001,
        "description": "Тихиро с мамой и папой переезжает в новый дом. Заблудившись по дороге, они оказываются в \
        странном пустынном городе, где их ждет великолепный пир. Родители с жадностью набрасываются на еду и к ужасу \
        девочки превращаются в свиней, став пленниками злой колдуньи Юбабы. Теперь, оказавшись одна среди волшебных \
        существ и загадочных видений, Тихиро должна придумать, как избавить своих родителей от чар коварной старухи."
    },
    {
        "title": "Coco",
        "title_ru": "Тайна Коко",
        "year": 2017,
        "description": "12-летний Мигель живёт в мексиканской деревушке в семье сапожников и тайно мечтает стать музыкантом. \
        Тайно, потому что в его семье музыка считается проклятием. Когда-то его прапрадед оставил жену, прапрабабку Мигеля, \
        ради мечты, которая теперь не даёт спокойно жить и его праправнуку. С тех пор музыкальная тема в семье стала табу. \
        Мигель обнаруживает, что между ним и его любимым певцом Эрнесто де ла Крусом, ныне покойным, существует некая связь. \
        Паренёк отправляется к своему кумиру в Страну Мёртвых, где встречает души предков. Мигель знакомится там с духом-скелетом \
        по имени Гектор, который становится его проводником. Вдвоём они отправляются на поиски де ла Круса."
    }
]


@lab7.route('/lab7/rest-api/films/', methods=['GET'])
def get_films():
    return jsonify(films)


@lab7.route('/lab7/rest-api/films/<int:id>/', methods=['GET'])
def get_film(id):
    if id < 0 or id >= len(films):
        return 'Такого фильма нет', 404 
    return films[id]


@lab7.route('/lab7/rest-api/films/<int:id>/', methods=['DELETE'])
def del_film(id):
    if id < 0 or id >= len(films):
        return 'Такого фильма нет', 404 
    del films[id]
    return '', 204


@lab7.route('/lab7/rest-api/films/<int:id>/', methods=['PUT'])
def put_film(id):
    if id < 0 or id >= len(films):
        return 'Такого фильма нет', 404     
    
    film = request.get_json()    

    if 'title_ru' in film and film['title_ru'] and not film['title']:
        film['title'] = film['title_ru']

    errors = {}  

    if film['title_ru'] == '':
        errors['title_ru'] = 'Заполните название на русском'

    if film['title'] == '':
        errors['title'] = 'Заполните название или добавте название на русском'
    

    if film['year'] == '' or not isinstance(film['year'], (int, float)):
        errors['year'] = 'Заполните год выхода фильма'
    else:
        current_year = datetime.now().year
        if not 1895 <= film['year'] <= current_year:
            errors['year'] = f'Год должен быть от 1895 до {current_year}'

    if film['description'] == '':
        errors['description'] = 'Заполните описание'
    else:
        if len(film['description']) > 2000:
            errors['description'] = 'Описание не должно превышать 2000 символов'

    if errors:
        return errors, 400
    else:    
        films[id] = film
        return films[id]